// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Staff {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password_hash String
  first_name    String
  last_name     String
  role          String    @default("OPERATOR") // StaffRole enum
  phone         String?
  is_active     Boolean   @default(true)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  statusHistoryUpdates OrderStatusHistory[]

  @@map("staff")
}

model Customer {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password_hash String
  first_name    String
  last_name     String
  phone         String?
  address_line1 String?
  address_line2 String?
  city          String?
  province      String?
  postal_code   String?
  country       String    @default("Canada")
  is_active     Boolean   @default(true)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  tradeInOrders TradeInOrder[]
  shippingAddresses ShippingAddress[]
  messages      CustomerMessage[]

  @@map("customers")
}

model DeviceCategory {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  icon        String?
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())

  models DeviceModel[]

  @@map("device_categories")
}

model DeviceBrand {
  id         Int      @id @default(autoincrement())
  name       String
  logo_url   String?
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())

  models DeviceModel[]

  @@map("device_brands")
}

model DeviceModel {
  id           Int      @id @default(autoincrement())
  name         String
  model_number String?
  releaseYear  Int?
  image_url    String?
  category_id  Int
  brand_id     Int
  display_order Int      @default(0)
  is_active    Boolean  @default(true)
  created_at   DateTime @default(now())

  category      DeviceCategory      @relation(fields: [category_id], references: [id])
  brand         DeviceBrand         @relation(fields: [brand_id], references: [id])
  storageOptions DeviceStorageOption[]
  tradeInOrders TradeInOrder[]

  @@map("device_models")
}

model DeviceStorageOption {
  id              Int      @id @default(autoincrement())
  device_model_id Int
  storage         String
  excellent_price Float    @default(0)
  good_price      Float    @default(0)
  fair_price      Float    @default(0)
  poor_price      Float    @default(0)
  is_active       Boolean  @default(true)
  created_at      DateTime @default(now())

  deviceModel DeviceModel @relation(fields: [device_model_id], references: [id])
  tradeInOrders TradeInOrder[]

  @@map("device_storage_options")
}

model DeviceCondition {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())

  tradeInOrders TradeInOrder[]

  @@map("device_conditions")
}

model TradeInOrder {
  id                Int      @id @default(autoincrement())
  order_number      String   @unique
  customer_id       Int
  device_model_id   Int
  device_condition_id Int
  storage_option_id Int?
  quoted_amount     Float
  final_amount      Float?
  status            String   @default("PENDING") // OrderStatus enum
  notes             String?
  submitted_at      DateTime @default(now())
  processed_at      DateTime?
  completed_at      DateTime?
  payment_method    String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  customer      Customer         @relation(fields: [customer_id], references: [id])
  deviceModel   DeviceModel     @relation(fields: [device_model_id], references: [id])
  deviceCondition DeviceCondition @relation(fields: [device_condition_id], references: [id])
  storageOption DeviceStorageOption? @relation(fields: [storage_option_id], references: [id])
  
  shippingLabels ShippingLabel[]
  payments      Payment[]
  statusHistory OrderStatusHistory[]
  messages      CustomerMessage[]

  @@map("trade_in_orders")
}

model OrderStatusHistory {
  id         Int      @id @default(autoincrement())
  order_id   Int
  status     String   // OrderStatus enum
  notes      String?
  updated_by Int
  updated_at DateTime @default(now())

  order TradeInOrder @relation(fields: [order_id], references: [id])
  staff Staff       @relation(fields: [updated_by], references: [id])

  @@map("order_status_history")
}

model ShippingLabel {
  id             Int       @id @default(autoincrement())
  order_id       Int
  tracking_number String    @unique
  carrier        String
  label_url      String?
  shipped_at     DateTime?
  delivered_at   DateTime?
  created_at     DateTime  @default(now())

  order TradeInOrder @relation(fields: [order_id], references: [id])

  @@map("shipping_labels")
}

model ShippingAddress {
  id           Int      @id @default(autoincrement())
  customer_id  Int
  address_type String   @default("SHIPPING") // AddressType enum
  address_line1 String
  address_line2 String?
  city         String
  province     String
  postal_code  String
  country      String   @default("Canada")
  is_default   Boolean  @default(false)
  created_at   DateTime @default(now())

  customer Customer @relation(fields: [customer_id], references: [id])

  @@map("shipping_addresses")
}

model PaymentMethod {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())

  payments Payment[]

  @@map("payment_methods")
}

model Payment {
  id                Int       @id @default(autoincrement())
  order_id          Int
  payment_method_id Int
  amount            Float
  transaction_id    String?   @unique
  status            String    @default("PENDING") // PaymentStatus enum
  processed_at      DateTime?
  notes             String?
  created_at        DateTime  @default(now())

  order        TradeInOrder  @relation(fields: [order_id], references: [id])
  paymentMethod PaymentMethod @relation(fields: [payment_method_id], references: [id])

  @@map("payments")
}

model CustomerMessage {
  id           Int      @id @default(autoincrement())
  customer_id  Int
  order_id     Int?
  subject      String
  message      String
  message_type String   @default("EMAIL") // MessageType enum
  status       String   @default("SENT") // MessageStatus enum
  sent_at      DateTime @default(now())

  customer Customer     @relation(fields: [customer_id], references: [id])
  order   TradeInOrder? @relation(fields: [order_id], references: [id])

  @@map("customer_messages")
}

model DailyStatistics {
  id                  Int      @id @default(autoincrement())
  date                DateTime @unique
  total_orders        Int      @default(0)
  completed_orders    Int      @default(0)
  total_revenue       Float    @default(0)
  average_order_value Float    @default(0)
  created_at          DateTime @default(now())

  @@map("daily_statistics")
}
