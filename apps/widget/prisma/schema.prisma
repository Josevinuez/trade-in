// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =====================================================
// AUTHENTICATION & USERS
// =====================================================

model Staff {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String   @map("password_hash")
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  role         StaffRole @default(OPERATOR)
  phone        String?
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  orderStatusHistory OrderStatusHistory[]

  @@map("staff")
}

model Customer {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String   @map("password_hash")
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  phone        String?
  addressLine1 String?  @map("address_line1")
  addressLine2 String?  @map("address_line2")
  city         String?
  province     String?
  postalCode   String?  @map("postal_code")
  country      String   @default("Canada")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  tradeInOrders       TradeInOrder[]
  shippingAddresses   ShippingAddress[]
  customerMessages    CustomerMessage[]

  @@map("customers")
}

model AuthToken {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  userType  UserType  @map("user_type")
  token     String    @unique
  expiresAt DateTime  @map("expires_at")
  createdAt DateTime  @default(now()) @map("created_at")

  @@map("auth_tokens")
}

// =====================================================
// DEVICE CATALOG
// =====================================================

model DeviceCategory {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  icon        String?
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  deviceModels DeviceModel[]

  @@map("device_categories")
}

model DeviceBrand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  logoUrl   String?  @map("logo_url")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  deviceModels DeviceModel[]

  @@map("device_brands")
}

model DeviceModel {
  id          Int      @id @default(autoincrement())
  categoryId  Int      @map("category_id")
  brandId     Int      @map("brand_id")
  name        String   @unique
  modelNumber String?  @map("model_number")
  releaseYear Int?
  imageUrl    String?  @map("image_url")
  displayOrder Int     @default(0) @map("display_order")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  category     DeviceCategory @relation(fields: [categoryId], references: [id])
  brand        DeviceBrand    @relation(fields: [brandId], references: [id])
  tradeInOrders TradeInOrder[]
  storageOptions DeviceStorageOption[]

  @@map("device_models")
}

model DeviceCondition {
  id              Int      @id @default(autoincrement())
  name            String   @unique
  description     String?
  priceMultiplier Decimal  @map("price_multiplier") @db.Decimal(3, 2) @default(1.00)
  isActive        Boolean  @default(true) @map("is_active")
  createdAt       DateTime @default(now()) @map("created_at")

  // Relations
  tradeInOrders TradeInOrder[]

  @@map("device_conditions")
}

model DeviceStorageOption {
  id        Int      @id @default(autoincrement())
  modelId   Int      @map("model_id")
  storage   String   // e.g., "64GB", "128GB", "256GB", "512GB", "1TB"
  excellentPrice Decimal? @map("excellent_price") @db.Decimal(10, 2)
  goodPrice     Decimal? @map("good_price") @db.Decimal(10, 2)
  fairPrice     Decimal? @map("fair_price") @db.Decimal(10, 2)
  poorPrice     Decimal? @map("poor_price") @db.Decimal(10, 2)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  model DeviceModel @relation(fields: [modelId], references: [id])

  @@map("device_storage_options")
}

// =====================================================
// TRADE-IN ORDERS (WOMS)
// =====================================================

model TradeInOrder {
  id               Int            @id @default(autoincrement())
  orderNumber      String         @unique @map("order_number")
  customerId       Int            @map("customer_id")
  deviceModelId    Int            @map("device_model_id")
  deviceConditionId Int            @map("device_condition_id")
  quotedAmount     Decimal        @map("quoted_amount") @db.Decimal(10, 2)
  finalAmount      Decimal?       @map("final_amount") @db.Decimal(10, 2)
  status           OrderStatus    @default(PENDING)
  notes            String?
  paymentMethod    String?        @map("payment_method")
  submittedAt      DateTime       @default(now()) @map("submitted_at")
  processedAt      DateTime?      @map("processed_at")
  completedAt      DateTime?      @map("completed_at")
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @updatedAt @map("updated_at")

  // Relations
  customer           Customer            @relation(fields: [customerId], references: [id])
  deviceModel        DeviceModel        @relation(fields: [deviceModelId], references: [id])
  deviceCondition    DeviceCondition    @relation(fields: [deviceConditionId], references: [id])
  orderStatusHistory OrderStatusHistory[]
  shippingLabels     ShippingLabel[]
  payments           Payment[]
  customerMessages   CustomerMessage[]

  @@map("trade_in_orders")
}

model OrderStatusHistory {
  id        Int         @id @default(autoincrement())
  orderId   Int         @map("order_id")
  status    OrderStatus
  notes     String?
  updatedBy Int         @map("updated_by")
  updatedAt DateTime    @default(now()) @map("updated_at")

  // Relations
  order TradeInOrder @relation(fields: [orderId], references: [id])
  staff Staff        @relation(fields: [updatedBy], references: [id])

  @@map("order_status_history")
}

// =====================================================
// SHIPPING & TRACKING
// =====================================================

model ShippingLabel {
  id             Int       @id @default(autoincrement())
  orderId        Int       @map("order_id")
  trackingNumber String    @unique @map("tracking_number")
  carrier        String
  labelUrl       String?   @map("label_url")
  shippedAt      DateTime? @map("shipped_at")
  deliveredAt    DateTime? @map("delivered_at")
  createdAt      DateTime  @default(now()) @map("created_at")

  // Relations
  order TradeInOrder @relation(fields: [orderId], references: [id])

  @@map("shipping_labels")
}

model ShippingAddress {
  id          Int           @id @default(autoincrement())
  customerId  Int           @map("customer_id")
  addressType AddressType   @default(SHIPPING) @map("address_type")
  addressLine1 String       @map("address_line1")
  addressLine2 String?      @map("address_line2")
  city        String
  province    String
  postalCode  String        @map("postal_code")
  country     String        @default("Canada")
  isDefault   Boolean       @default(false) @map("is_default")
  createdAt   DateTime      @default(now()) @map("created_at")

  // Relations
  customer Customer @relation(fields: [customerId], references: [id])

  @@map("shipping_addresses")
}

// =====================================================
// PAYMENTS
// =====================================================

model PaymentMethod {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  payments Payment[]

  @@map("payment_methods")
}

model Payment {
  id             Int           @id @default(autoincrement())
  orderId        Int           @map("order_id")
  paymentMethodId Int           @map("payment_method_id")
  amount         Decimal       @db.Decimal(10, 2)
  transactionId  String?       @unique @map("transaction_id")
  status         PaymentStatus @default(PENDING)
  processedAt    DateTime?     @map("processed_at")
  notes          String?
  createdAt      DateTime      @default(now()) @map("created_at")

  // Relations
  order         TradeInOrder   @relation(fields: [orderId], references: [id])
  paymentMethod PaymentMethod  @relation(fields: [paymentMethodId], references: [id])

  @@map("payments")
}

// =====================================================
// COMMUNICATION
// =====================================================

model CustomerMessage {
  id          Int              @id @default(autoincrement())
  customerId  Int              @map("customer_id")
  orderId     Int?             @map("order_id")
  subject     String
  message     String
  messageType MessageType      @map("message_type")
  status      MessageStatus    @default(SENT)
  sentAt      DateTime         @default(now()) @map("sent_at")

  // Relations
  customer Customer @relation(fields: [customerId], references: [id])
  order    TradeInOrder? @relation(fields: [orderId], references: [id])

  @@map("customer_messages")
}

// =====================================================
// ANALYTICS & REPORTING
// =====================================================

model DailyStatistic {
  id                  Int      @id @default(autoincrement())
  date                DateTime @unique
  totalOrders         Int      @default(0) @map("total_orders")
  completedOrders     Int      @default(0) @map("completed_orders")
  totalRevenue        Decimal  @default(0) @map("total_revenue") @db.Decimal(12, 2)
  averageOrderValue   Decimal  @default(0) @map("average_order_value") @db.Decimal(10, 2)
  createdAt           DateTime @default(now()) @map("created_at")

  @@map("daily_statistics")
}

// =====================================================
// ENUMS
// =====================================================

enum StaffRole {
  ADMIN
  MANAGER
  OPERATOR
  INSPECTOR
}

enum UserType {
  STAFF
  CUSTOMER
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
  REJECTED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum MessageType {
  EMAIL
  SMS
  NOTIFICATION
}

enum MessageStatus {
  SENT
  DELIVERED
  FAILED
}

enum AddressType {
  SHIPPING
  BILLING
}
